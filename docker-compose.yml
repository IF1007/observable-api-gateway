version: '2'
services:
  proxy:
    image: bitnami/envoy
    volumes: 
      - ./envoy/envoy.yaml:/opt/bitnami/envoy/conf/envoy.yaml
    ports:
      - "8081:8081"
      - "8001:8001"
    networks:
      - envoymesh
  service:
    image: mendhak/http-https-echo
    networks:
      - envoymesh
  registry:
    image: descartesresearch/teastore-registry
    expose:
      - "8080"
    networks:
      - envoymesh
  db:
    image: descartesresearch/teastore-db
    expose:
      - "3306"
    ports:
      - "3306:3306"
    networks:
      - envoymesh
  persistence:
    image: descartesresearch/teastore-persistence
    expose:
      - "8080"
    environment:
      HOST_NAME: "persistence"
      REGISTRY_HOST: "registry"
      DB_HOST: "db"
      DB_PORT: "3306"
    networks:
      - envoymesh
  auth:
    image: descartesresearch/teastore-auth
    expose:
      - "8080"
    environment:
      HOST_NAME: "auth"
      REGISTRY_HOST: "registry"
    networks:
      - envoymesh
  image:
    image: descartesresearch/teastore-image
    expose:
      - "8080"
    environment:
      HOST_NAME: "image"
      REGISTRY_HOST: "registry"
    networks:
      - envoymesh
  recommender:
    image: descartesresearch/teastore-recommender
    expose:
      - "8080"
    environment:
      HOST_NAME: "recommender"
      REGISTRY_HOST: "registry"
    networks:
      - envoymesh
  webui:
    image: descartesresearch/teastore-webui
    expose:
      - "8080"
    environment:
      HOST_NAME: "webui"
      REGISTRY_HOST: "registry"
    ports:
      - "8080:8080"
    networks:
      - envoymesh
  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - envoymesh
    restart: always
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
    networks:
      - envoymesh
    restart: always
networks:
  envoymesh: {}