version: '2'
services:
  mongo:
    image: 'mongo'
    environment: 
      - MONGO_INITDB_DATABASE=admin
      - MONGO_INITDB_USERNAME=admin
      - MONGO_INITDB_PASSWORD=admin
    volumes:
      - ./cinema-microservice/mongo-db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - '27017-27019:27017-27019'
    networks: 
      - envoymesh
  booking-service:
    build: ./cinema-microservice/booking-service
    env_file: ./cinema-microservice/booking-service/env
    labels:
        apiRoute: '/booking'
    networks:
      - envoymesh
  cinema-catalog-service:
    build: ./cinema-microservice/cinema-catalog-service
    env_file: ./cinema-microservice/cinema-catalog-service/env
    labels:
        apiRoute: '/cinemas'
    networks:
      - envoymesh
  movies-service:
    build: ./cinema-microservice/movies-service
    labels:
        apiRoute: '/movies'
    networks:
      - envoymesh
  payment-service:
    build: ./cinema-microservice/payment-service
    env_file: ./cinema-microservice/payment-service/env
    labels:
        apiRoute: '/payment'
    networks:
      - envoymesh
  notification-service:
    build: ./cinema-microservice/notification-service
    env_file: ./cinema-microservice/notification-service/env
    labels:
        apiRoute: '/notification'
    networks:
      - envoymesh
  proxy:
    image: bitnami/envoy
    volumes: 
      - ./envoy/envoy.yaml:/opt/bitnami/envoy/conf/envoy.yaml
    ports:
      - "8081:8081"
      - "8001:8001"
    networks:
      - envoymesh
  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - envoymesh
    restart: always
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
    networks:
      - envoymesh
    restart: always
networks:
  envoymesh: {}
volumes: 
  mongodata: